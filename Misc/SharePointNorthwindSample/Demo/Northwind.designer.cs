//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1318
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Demo {
    
    
    public partial class NorthwindDataContext : global::System.Data.Linq.DataContext {
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public NorthwindDataContext(string connection) : 
                base(connection) {
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public NorthwindDataContext(global::System.Data.IDbConnection connection) : 
                base(connection) {
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public NorthwindDataContext() : 
                base(global::SharePointNorthwindSample.Properties.Settings.Default.NorthwindConnectionString) {
        }
        
        public global::System.Data.Linq.Table<Category> Categories {
            get {
                return this.GetTable<Category>();
            }
        }
        
        public global::System.Data.Linq.Table<Product> Products {
            get {
                return this.GetTable<Product>();
            }
        }
        
        public global::System.Data.Linq.Table<Supplier> Suppliers {
            get {
                return this.GetTable<Supplier>();
            }
        }
    }
    
    [global::System.Data.Linq.Table(Name="dbo.Categories")]
    public partial class Category : global::System.Data.Linq.INotifyPropertyChanging, global::System.ComponentModel.INotifyPropertyChanged {
        
        private int _CategoryID;
        
        private string _CategoryName;
        
        private string _Description;
        
        private byte[] _Picture;
        
        private global::System.Data.Linq.EntitySet<Product> _Products;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Category() {
            this._CategoryID = default(int);
            this._Products = new global::System.Data.Linq.EntitySet<Product>(new global::System.Action<Product>(this.Attach_Products), new global::System.Action<Product>(this.Detach_Products));
        }
        
        [global::System.Data.Linq.Column(Storage="_CategoryID", Name="CategoryID", DBType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDBGenerated=true, CanBeNull=false)]
        public int CategoryID {
            get {
                return this._CategoryID;
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_CategoryName", Name="CategoryName", DBType="NVarChar(15) NOT NULL", CanBeNull=false)]
        public string CategoryName {
            get {
                return this._CategoryName;
            }
            set {
                if ((this._CategoryName != value)) {
                    this.OnPropertyChanging("CategoryName");
                    this._CategoryName = value;
                    this.OnPropertyChanged("CategoryName");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_Description", Name="Description", DBType="NText")]
        public string Description {
            get {
                return this._Description;
            }
            set {
                if ((this._Description != value)) {
                    this.OnPropertyChanging("Description");
                    this._Description = value;
                    this.OnPropertyChanged("Description");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_Picture", Name="Picture", DBType="Image")]
        public byte[] Picture {
            get {
                return this._Picture;
            }
            set {
                if ((this._Picture != value)) {
                    this.OnPropertyChanging("Picture");
                    this._Picture = value;
                    this.OnPropertyChanged("Picture");
                }
            }
        }
        
        [global::System.Data.Linq.Association(Name="FK_Products_Categories", Storage="_Products", OtherKey="CategoryID", ThisKey="CategoryID")]
        public global::System.Data.Linq.EntitySet<Product> Products {
            get {
                return this._Products;
            }
            set {
                this._Products.Assign(value);
            }
        }
        
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanging;
        
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected void OnPropertyChanging(string propertyName) {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, new global::System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected void OnPropertyChanged(string propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void Attach_Products(Product entity) {
            this.OnPropertyChanging(null);
            entity.Category = this;
            this.OnPropertyChanged(null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void Detach_Products(Product entity) {
            this.OnPropertyChanging(null);
            entity.Category = null;
            this.OnPropertyChanged(null);
        }
    }
    
    [global::System.Data.Linq.Table(Name="dbo.Products")]
    public partial class Product : global::System.Data.Linq.INotifyPropertyChanging, global::System.ComponentModel.INotifyPropertyChanged {
        
        private int _ProductID;
        
        private string _ProductName;
        
        private global::System.Nullable<int> _SupplierID;
        
        private global::System.Nullable<int> _CategoryID;
        
        private string _QuantityPerUnit;
        
        private global::System.Nullable<decimal> _UnitPrice;
        
        private global::System.Nullable<short> _UnitsInStock;
        
        private global::System.Nullable<short> _UnitsOnOrder;
        
        private global::System.Nullable<short> _ReorderLevel;
        
        private bool _Discontinued;
        
        private global::System.Data.Linq.EntityRef<Category> _Category;
        
        private global::System.Data.Linq.EntityRef<Supplier> _Supplier;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Product() {
            this._ProductID = default(int);
            this._Category = default(global::System.Data.Linq.EntityRef<Category>);
            this._Supplier = default(global::System.Data.Linq.EntityRef<Supplier>);
        }
        
        [global::System.Data.Linq.Column(Storage="_ProductID", Name="ProductID", DBType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDBGenerated=true, CanBeNull=false)]
        public int ProductID {
            get {
                return this._ProductID;
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_ProductName", Name="ProductName", DBType="NVarChar(40) NOT NULL", CanBeNull=false)]
        public string ProductName {
            get {
                return this._ProductName;
            }
            set {
                if ((this._ProductName != value)) {
                    this.OnPropertyChanging("ProductName");
                    this._ProductName = value;
                    this.OnPropertyChanged("ProductName");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_SupplierID", Name="SupplierID", DBType="Int")]
        public global::System.Nullable<int> SupplierID {
            get {
                return this._SupplierID;
            }
            set {
                if ((this._SupplierID != value)) {
                    this.OnPropertyChanging("SupplierID");
                    this._SupplierID = value;
                    this.OnPropertyChanged("SupplierID");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_CategoryID", Name="CategoryID", DBType="Int")]
        public global::System.Nullable<int> CategoryID {
            get {
                return this._CategoryID;
            }
            set {
                if ((this._CategoryID != value)) {
                    this.OnPropertyChanging("CategoryID");
                    this._CategoryID = value;
                    this.OnPropertyChanged("CategoryID");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_QuantityPerUnit", Name="QuantityPerUnit", DBType="NVarChar(20)")]
        public string QuantityPerUnit {
            get {
                return this._QuantityPerUnit;
            }
            set {
                if ((this._QuantityPerUnit != value)) {
                    this.OnPropertyChanging("QuantityPerUnit");
                    this._QuantityPerUnit = value;
                    this.OnPropertyChanged("QuantityPerUnit");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_UnitPrice", Name="UnitPrice", DBType="Money")]
        public global::System.Nullable<decimal> UnitPrice {
            get {
                return this._UnitPrice;
            }
            set {
                if ((this._UnitPrice != value)) {
                    this.OnPropertyChanging("UnitPrice");
                    this._UnitPrice = value;
                    this.OnPropertyChanged("UnitPrice");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_UnitsInStock", Name="UnitsInStock", DBType="SmallInt")]
        public global::System.Nullable<short> UnitsInStock {
            get {
                return this._UnitsInStock;
            }
            set {
                if ((this._UnitsInStock != value)) {
                    this.OnPropertyChanging("UnitsInStock");
                    this._UnitsInStock = value;
                    this.OnPropertyChanged("UnitsInStock");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_UnitsOnOrder", Name="UnitsOnOrder", DBType="SmallInt")]
        public global::System.Nullable<short> UnitsOnOrder {
            get {
                return this._UnitsOnOrder;
            }
            set {
                if ((this._UnitsOnOrder != value)) {
                    this.OnPropertyChanging("UnitsOnOrder");
                    this._UnitsOnOrder = value;
                    this.OnPropertyChanged("UnitsOnOrder");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_ReorderLevel", Name="ReorderLevel", DBType="SmallInt")]
        public global::System.Nullable<short> ReorderLevel {
            get {
                return this._ReorderLevel;
            }
            set {
                if ((this._ReorderLevel != value)) {
                    this.OnPropertyChanging("ReorderLevel");
                    this._ReorderLevel = value;
                    this.OnPropertyChanged("ReorderLevel");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_Discontinued", Name="Discontinued", DBType="Bit NOT NULL", CanBeNull=false)]
        public bool Discontinued {
            get {
                return this._Discontinued;
            }
            set {
                if ((this._Discontinued != value)) {
                    this.OnPropertyChanging("Discontinued");
                    this._Discontinued = value;
                    this.OnPropertyChanged("Discontinued");
                }
            }
        }
        
        [global::System.Data.Linq.Association(Name="FK_Products_Categories", Storage="_Category", OtherKey="CategoryID", ThisKey="CategoryID", IsForeignKey=true)]
        public Category Category {
            get {
                return this._Category.Entity;
            }
            set {
                if ((this._Category.Entity != value)) {
                    this.OnPropertyChanging("Category");
                    if ((this._Category.Entity != null)) {
                        Category temp = this._Category.Entity;
                        this._Category.Entity = null;
                        temp.Products.Remove(this);
                    }
                    this._Category.Entity = value;
                    if ((value != null)) {
                        value.Products.Add(this);
                    }
                    this.OnPropertyChanged("Category");
                }
            }
        }
        
        [global::System.Data.Linq.Association(Name="FK_Products_Suppliers", Storage="_Supplier", OtherKey="SupplierID", ThisKey="SupplierID", IsForeignKey=true)]
        public Supplier Supplier {
            get {
                return this._Supplier.Entity;
            }
            set {
                if ((this._Supplier.Entity != value)) {
                    this.OnPropertyChanging("Supplier");
                    if ((this._Supplier.Entity != null)) {
                        Supplier temp = this._Supplier.Entity;
                        this._Supplier.Entity = null;
                        temp.Products.Remove(this);
                    }
                    this._Supplier.Entity = value;
                    if ((value != null)) {
                        value.Products.Add(this);
                    }
                    this.OnPropertyChanged("Supplier");
                }
            }
        }
        
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanging;
        
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected void OnPropertyChanging(string propertyName) {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, new global::System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected void OnPropertyChanged(string propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [global::System.Data.Linq.Table(Name="dbo.Suppliers")]
    public partial class Supplier : global::System.Data.Linq.INotifyPropertyChanging, global::System.ComponentModel.INotifyPropertyChanged {
        
        private int _SupplierID;
        
        private string _CompanyName;
        
        private string _ContactName;
        
        private string _ContactTitle;
        
        private string _Address;
        
        private string _City;
        
        private string _Region;
        
        private string _PostalCode;
        
        private string _Country;
        
        private string _Phone;
        
        private string _Fax;
        
        private string _HomePage;
        
        private global::System.Data.Linq.EntitySet<Product> _Products;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Supplier() {
            this._SupplierID = default(int);
            this._Products = new global::System.Data.Linq.EntitySet<Product>(new global::System.Action<Product>(this.Attach_Products), new global::System.Action<Product>(this.Detach_Products));
        }
        
        [global::System.Data.Linq.Column(Storage="_SupplierID", Name="SupplierID", DBType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDBGenerated=true, CanBeNull=false)]
        public int SupplierID {
            get {
                return this._SupplierID;
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_CompanyName", Name="CompanyName", DBType="NVarChar(40) NOT NULL", CanBeNull=false)]
        public string CompanyName {
            get {
                return this._CompanyName;
            }
            set {
                if ((this._CompanyName != value)) {
                    this.OnPropertyChanging("CompanyName");
                    this._CompanyName = value;
                    this.OnPropertyChanged("CompanyName");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_ContactName", Name="ContactName", DBType="NVarChar(30)")]
        public string ContactName {
            get {
                return this._ContactName;
            }
            set {
                if ((this._ContactName != value)) {
                    this.OnPropertyChanging("ContactName");
                    this._ContactName = value;
                    this.OnPropertyChanged("ContactName");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_ContactTitle", Name="ContactTitle", DBType="NVarChar(30)")]
        public string ContactTitle {
            get {
                return this._ContactTitle;
            }
            set {
                if ((this._ContactTitle != value)) {
                    this.OnPropertyChanging("ContactTitle");
                    this._ContactTitle = value;
                    this.OnPropertyChanged("ContactTitle");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_Address", Name="Address", DBType="NVarChar(60)")]
        public string Address {
            get {
                return this._Address;
            }
            set {
                if ((this._Address != value)) {
                    this.OnPropertyChanging("Address");
                    this._Address = value;
                    this.OnPropertyChanged("Address");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_City", Name="City", DBType="NVarChar(15)")]
        public string City {
            get {
                return this._City;
            }
            set {
                if ((this._City != value)) {
                    this.OnPropertyChanging("City");
                    this._City = value;
                    this.OnPropertyChanged("City");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_Region", Name="Region", DBType="NVarChar(15)")]
        public string Region {
            get {
                return this._Region;
            }
            set {
                if ((this._Region != value)) {
                    this.OnPropertyChanging("Region");
                    this._Region = value;
                    this.OnPropertyChanged("Region");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_PostalCode", Name="PostalCode", DBType="NVarChar(10)")]
        public string PostalCode {
            get {
                return this._PostalCode;
            }
            set {
                if ((this._PostalCode != value)) {
                    this.OnPropertyChanging("PostalCode");
                    this._PostalCode = value;
                    this.OnPropertyChanged("PostalCode");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_Country", Name="Country", DBType="NVarChar(15)")]
        public string Country {
            get {
                return this._Country;
            }
            set {
                if ((this._Country != value)) {
                    this.OnPropertyChanging("Country");
                    this._Country = value;
                    this.OnPropertyChanged("Country");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_Phone", Name="Phone", DBType="NVarChar(24)")]
        public string Phone {
            get {
                return this._Phone;
            }
            set {
                if ((this._Phone != value)) {
                    this.OnPropertyChanging("Phone");
                    this._Phone = value;
                    this.OnPropertyChanged("Phone");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_Fax", Name="Fax", DBType="NVarChar(24)")]
        public string Fax {
            get {
                return this._Fax;
            }
            set {
                if ((this._Fax != value)) {
                    this.OnPropertyChanging("Fax");
                    this._Fax = value;
                    this.OnPropertyChanged("Fax");
                }
            }
        }
        
        [global::System.Data.Linq.Column(Storage="_HomePage", Name="HomePage", DBType="NText")]
        public string HomePage {
            get {
                return this._HomePage;
            }
            set {
                if ((this._HomePage != value)) {
                    this.OnPropertyChanging("HomePage");
                    this._HomePage = value;
                    this.OnPropertyChanged("HomePage");
                }
            }
        }
        
        [global::System.Data.Linq.Association(Name="FK_Products_Suppliers", Storage="_Products", OtherKey="SupplierID", ThisKey="SupplierID")]
        public global::System.Data.Linq.EntitySet<Product> Products {
            get {
                return this._Products;
            }
            set {
                this._Products.Assign(value);
            }
        }
        
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanging;
        
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected void OnPropertyChanging(string propertyName) {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, new global::System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected void OnPropertyChanged(string propertyName) {
            if ((this.PropertyChanged != null)) {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void Attach_Products(Product entity) {
            this.OnPropertyChanging(null);
            entity.Supplier = this;
            this.OnPropertyChanged(null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void Detach_Products(Product entity) {
            this.OnPropertyChanging(null);
            entity.Supplier = null;
            this.OnPropertyChanged(null);
        }
    }
}
